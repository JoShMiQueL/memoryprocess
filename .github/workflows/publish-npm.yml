name: Publish to npm

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  check-and-publish:
    runs-on: windows-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js for version check
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install semver
        run: npm install -g semver

      - name: Check for version change
        id: check
        uses: EndBug/version-check@v2
        with:
          diff-search: true
          file-name: package.json
          
      - name: Validate version
        if: steps.check.outputs.changed == 'true'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          LATEST_NPM_VERSION=$(npm view @joshmiquel/memoryjs version 2>/dev/null || echo "0.0.0")
          if [ "$(semver $CURRENT_VERSION)" != "$(semver -i $LATEST_NPM_VERSION patch)" ] && \
             [ "$(semver $CURRENT_VERSION)" != "$(semver -i $LATEST_NPM_VERSION minor)" ] && \
             [ "$(semver $CURRENT_VERSION)" != "$(semver -i $LATEST_NPM_VERSION major)" ]; then
            echo "Error: Invalid version increment. Version must be exactly one increment (patch, minor, or major) from $LATEST_NPM_VERSION"
            exit 1
          fi

      - name: Setup Bun
        if: steps.check.outputs.changed == 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        if: steps.check.outputs.changed == 'true'
        run: bun i --frozen-lockfile --ignore-scripts

      - name: Setup Python
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install node-gyp
        if: steps.check.outputs.changed == 'true'
        run: bun add -g node-gyp

      - name: Build
        if: steps.check.outputs.changed == 'true'
        run: bun run build

      - name: Setup Node
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/

      - name: Publish to npm
        if: steps.check.outputs.changed == 'true'
        id: publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - if: steps.publish.outputs.type
        run: echo "Version changed and published!"