name: Bump version
on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - alpha
          - beta

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.get-latest-version.outputs.lastest_version }}
      latest_beta_version: ${{ steps.get-latest-version.outputs.lastest_beta_version }}
      latest_alpha_version: ${{ steps.get-latest-version.outputs.lastest_alpha_version }}
      next_version: ${{ steps.calculate-next-version.outputs.next_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install semver
        run: npm install -g semver

      - name: Get latest version from npm
        id: get-latest-version
        run: |
          echo "lastest_version=$(npm view @joshmiquel/memoryjs version | tr -d '\n')" >> $GITHUB_OUTPUT
          echo "lastest_beta_version=$(npm view @joshmiquel/memoryjs dist-tags.beta | tr -d '\n')" >> $GITHUB_OUTPUT
          echo "lastest_alpha_version=$(npm view @joshmiquel/memoryjs dist-tags.alpha | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Calculate next version with semver
        id: calculate-next-version
        run: |
          if [[ "${{ github.event.inputs.bump_type }}" == "patch" ]]; then
            echo "next_version=$(semver -i patch ${{ steps.get-latest-version.outputs.lastest_version }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.bump_type }}" == "minor" ]]; then
            echo "next_version=$(semver -i minor ${{ steps.get-latest-version.outputs.lastest_version }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.bump_type }}" == "major" ]]; then
            echo "next_version=$(semver -i major ${{ steps.get-latest-version.outputs.lastest_version }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.bump_type }}" == "beta" ]]; then
            echo "next_version=$(semver -i prerelease --preid beta ${{ steps.get-latest-version.outputs.lastest_beta_version || steps.get-latest-version.outputs.lastest_version }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.bump_type }}" == "alpha" ]]; then
            echo "next_version=$(semver -i prerelease --preid alpha ${{ steps.get-latest-version.outputs.lastest_alpha_version || steps.get-latest-version.outputs.lastest_version }})" >> $GITHUB_OUTPUT
          fi
  
  bump-package:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Bump package
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          npm version ${{ inputs.bump_type }} --no-git-tag-version
          git add package.json
          git commit -m "chore: bump version to ${{ needs.prepare.outputs.next_version }}"
          git push

  release-draft:
    needs: [prepare, bump-package]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GH Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          draft: true
          prerelease: ${{ inputs.bump_type == 'alpha' || inputs.bump_type == 'beta' }}
          tag_name: v${{ needs.prepare.outputs.next_version }}
          body_path: release_body.md
